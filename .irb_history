currencies = Currencies.first
currency = Currency.first
currency
CurrenciesSerializer.new(currency)
CurrenciesSerializer.new(currency).serializer_json
CurrenciesSerializer.new(currency).serialized_json
CurrenciesSerializer.new(currency).as_json
exity
exit
Currency.all
exit
currency.all
Currency.all
exit
Currency.all
exit
Currency.all
Currency.destroy_all
exit
@currency = Currency.new
@currency
@currency.create
@currency.save
@currency.errors
@currency.errors.mensagers
@currency.errors.messages
@currency.errors.messages.to_sentence
@currency.errors.messages.to_sentence
@currency.error.any?
@currency.errors.any?
exit
Debs.all
Debt.all
exit
Currency.count
exit
exit
Currency.all
exit
DateTime.current
exit
Debt.all
exit
ProjectDebt.all
ProjectionDebt.all
ProjectionDebt.all
exit
exit
require 'date'
Date.today
((Date.today - 10)..Date.today).each 
((Date.today - 10)..Date.today).each { |date| puts date }
((Date.today - 10)..Date.today).each { |date| puts date }
((Date.new(2013-01-01))..Date.today).each { |date| puts date }
((Date.new(01-01-2013))..Date.today).each { |date| puts date }
((Date.new(2013-01-01))..Date.today).each { |date| puts date }
Date.new(2013-01-01)
Date.new(01-01-2013)
Date.new(01-2013)
Date.new(01-01-2013)
Date.new(2013-01-01)
Date.new(2014-01-01)
Date.new(2015-01-01)
Date.new('2015-01-01')
Date.new("2015-01-01")
Date.new("2015-01-01").to
Date.new("2015-01-01").to_i
Date.new("2015-01-01")
Date.new
Date.new
exit
require 'date'
Date.new(2013-01-01)
Date.new(2013-01-01)Date.current
Date.today
Date.new(2013-01-01)
exit
Debt.all
Debt.destroy(3)
exit
Debs.all
Debt.all
Debt.find(1)
exit
amor
amortizacao = Debt.find(1)
amortizacao.amortization_period.strftime("%d-%m-%Y")
exit
